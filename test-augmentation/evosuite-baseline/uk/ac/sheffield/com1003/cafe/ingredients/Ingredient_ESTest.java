/*
 * This file was automatically generated by EvoSuite
 * Tue Sep 26 12:55:23 GMT 2023
 */

package uk.ac.sheffield.com1003.cafe.ingredients;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import uk.ac.sheffield.com1003.cafe.ingredients.Coffee;
import uk.ac.sheffield.com1003.cafe.ingredients.Milk;
import uk.ac.sheffield.com1003.cafe.ingredients.Syrup;
import uk.ac.sheffield.com1003.cafe.ingredients.Unit;
import uk.ac.sheffield.com1003.cafe.ingredients.Water;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Ingredient_ESTest extends Ingredient_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Water water0 = new Water(1052);
      String string0 = water0.toString();
      assertEquals("Water [unit=ML, amount=1052]", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Water water0 = new Water(1052);
      water0.name = null;
      String string0 = water0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Coffee coffee0 = new Coffee(0, true);
      String string0 = coffee0.getName();
      assertEquals("Coffee", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Water water0 = new Water(1052);
      water0.name = null;
      water0.name = "";
      String string0 = water0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Coffee coffee0 = new Coffee(0);
      int int0 = coffee0.getAmount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Milk milk0 = new Milk((-163));
      int int0 = milk0.getAmount();
      assertEquals((-163), int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Syrup syrup0 = new Syrup();
      Object object0 = new Object();
      boolean boolean0 = syrup0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Syrup syrup0 = new Syrup();
      boolean boolean0 = syrup0.equals(syrup0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Syrup syrup0 = new Syrup();
      boolean boolean0 = syrup0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Syrup syrup0 = new Syrup();
      Unit unit0 = syrup0.getUnit();
      assertEquals(Unit.ML, unit0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Coffee coffee0 = new Coffee();
      int int0 = coffee0.getAmount();
      assertEquals(8, int0);
  }
}
