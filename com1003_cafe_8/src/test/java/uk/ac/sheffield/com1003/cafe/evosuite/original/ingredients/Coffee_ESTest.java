/*
 * This file was automatically generated by EvoSuite
 * Thu Sep 21 17:14:48 GMT 2023
 */

package uk.ac.sheffield.com1003.cafe.evosuite.original.ingredients;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import uk.ac.sheffield.com1003.cafe.ingredients.Coffee;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Coffee_ESTest extends Coffee_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
//      Coffee coffee0 = new Coffee();
      Coffee coffee0 = new Coffee(-294);
      Coffee coffee1 = new Coffee();
      assertEquals(8, coffee1.getAmount());
      
//      coffee1.amount = (-294);
      boolean boolean0 = coffee1.equals(coffee0);
      assertFalse(boolean0);
  }

//  @Test(timeout = 4000)
//  public void test1()  throws Throwable  {
//      Coffee coffee0 = new Coffee();
////      coffee0.name = null;
//      // Undeclared exception!
//      try {
//        coffee0.equals(coffee0);
//        fail("Expecting exception: NullPointerException");
//
//      } catch(NullPointerException e) {
//      }
//  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Coffee coffee0 = new Coffee(0);
      Coffee coffee1 = new Coffee(0, true);
      boolean boolean0 = coffee0.equals(coffee1);
      assertEquals("Coffee", coffee1.getName());
      assertFalse(boolean0);
      assertEquals(0, coffee1.getAmount());
  }

//  @Test(timeout = 4000)
//  public void test3()  throws Throwable  {
//      Coffee coffee0 = new Coffee();
////      Unit unit0 = Unit.ML;
////      coffee0.unit = unit0;
//      Coffee coffee1 = new Coffee();
//      boolean boolean0 = coffee0.equals(coffee1);
//      assertEquals("Coffee", coffee1.getName());
//      assertEquals(8, coffee1.getAmount());
//      assertFalse(boolean0);
//  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
//      Coffee coffee0 = new Coffee();
      Coffee coffee0 = new Coffee(-294);
      Coffee coffee1 = new Coffee();
      assertEquals(8, coffee1.getAmount());
      
//      coffee1.amount = (-294);
      boolean boolean0 = coffee0.equals(coffee1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Coffee coffee0 = new Coffee();
      Coffee coffee1 = new Coffee();
      assertTrue(coffee1.equals((Object)coffee0));
      
//      coffee1.name = null;
//      boolean boolean0 = coffee0.equals(coffee1);
//      assertFalse(boolean0);
      assertEquals("Coffee", coffee0.getName());
      assertEquals(8, coffee1.getAmount());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Coffee coffee0 = new Coffee();
      boolean boolean0 = coffee0.equals(coffee0);
      assertEquals(8, coffee0.getAmount());
      assertTrue(boolean0);
      assertEquals("Coffee", coffee0.getName());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Coffee coffee0 = new Coffee(0);
      boolean boolean0 = coffee0.equals((Object) null);
      assertFalse(boolean0);
      assertEquals("Coffee", coffee0.getName());
      assertEquals(0, coffee0.getAmount());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Coffee coffee0 = new Coffee();
      String string0 = coffee0.toString();
      assertEquals("Coffee [unit=GR, amount=8, decaf=false]", string0);
      assertEquals("Coffee", coffee0.getName());
  }
}
